{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladi Gotsin\\\\Desktop\\\\react\\\\src\\\\Chess.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  dark,\n  piece\n}) {\n  let c = \"chessSquare piece\";\n  c = dark ? c + ' dark' : c;\n  c = c + ' ' + piece;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: c\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n_c = Square;\nfunction Board({\n  position\n}) {\n  let color;\n  let piece;\n  let rows = [];\n  let key = 1;\n  let white = true;\n  for (let i = 0; i < position.length; i++) {\n    for (let j = 0; j < position[i].length; j++) {\n      if (position[i].charCodeAt(j) >= 97 && position[i].charCodeAt(j) <= 122) {\n        color = 'black';\n      } else if (position[i].charCodeAt(j) >= 65 && position[i].charCodeAt(j) <= 90) {\n        color = 'white';\n      } else {\n        color = undefined;\n      }\n      switch (position[i][j].toLowerCase()) {\n        case \"p\":\n          piece = 'pawn';\n          break;\n        case 'n':\n          piece = 'knight';\n          break;\n        case 'k':\n          piece = 'king';\n          break;\n        case 'q':\n          piece = 'queen';\n          break;\n        case 'b':\n          piece = 'bishop';\n          break;\n        case 'r':\n          piece = 'rook';\n          break;\n        default:\n          piece = undefined;\n          break;\n      }\n      if (piece != undefined && color != undefined) {\n        rows.push( /*#__PURE__*/_jsxDEV(Square, {\n          dark: white ? false : true,\n          piece: color + '-' + piece\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 27\n        }, this));\n        if (key % 8 != 0) {\n          white = !white;\n        }\n        key++;\n      } else {\n        for (let k = 0; k < Number(position[i][j]); k++) {\n          rows.push( /*#__PURE__*/_jsxDEV(Square, {\n            dark: white ? false : true\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 31\n          }, this));\n          if (key % 8 != 0) {\n            white = !white;\n          }\n          key++;\n        }\n      }\n    }\n  }\n  return rows;\n}\n_c2 = Board;\nexport default function Chess() {\n  _s();\n  const [boardPosition, setBoardPosition] = useState([\n    // 'rnbqkbnr',\n    // 'pppppppp',\n    // '8',\n    // '8',\n    // '8',\n    // '8',\n    // 'PPPPPPPP',\n    // 'RNBQKBNR'\n  ]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chessContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chessGrid\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          position: boardPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Chess, \"XYSR+QUNMT8pY5/PhVaAl4qIHTM=\");\n_c3 = Chess;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Chess\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","dark","piece","c","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","position","color","rows","key","white","i","length","j","charCodeAt","undefined","toLowerCase","push","k","Number","_c2","Chess","_s","boardPosition","setBoardPosition","children","_c3","$RefreshReg$"],"sources":["C:/Users/Vladi Gotsin/Desktop/react/src/Chess.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Square({ dark, piece }) {\r\n    let c = \"chessSquare piece\";\r\n    c = dark ? c + ' dark' : c;\r\n    c = c + ' ' + piece;\r\n    return <div className={c}></div>\r\n}\r\n\r\nfunction Board({ position }) {\r\n\r\n    let color;\r\n    let piece;\r\n    let rows = [];\r\n    let key = 1;\r\n    let white = true;\r\n\r\n    for (let i = 0; i < position.length; i++) {\r\n        for (let j = 0; j < position[i].length; j++) {\r\n            if (position[i].charCodeAt(j) >= 97 && position[i].charCodeAt(j) <= 122) {\r\n                color = 'black';\r\n            } else if (position[i].charCodeAt(j) >= 65 && position[i].charCodeAt(j) <= 90) {\r\n                color = 'white';\r\n            } else {\r\n                color = undefined;\r\n            }\r\n\r\n            switch (position[i][j].toLowerCase()) {\r\n                case \"p\":\r\n                    piece = 'pawn';\r\n                    break;\r\n                case 'n':\r\n                    piece = 'knight';\r\n                    break;\r\n                case 'k':\r\n                    piece = 'king';\r\n                    break;\r\n                case 'q':\r\n                    piece = 'queen';\r\n                    break;\r\n                case 'b':\r\n                    piece = 'bishop';\r\n                    break;\r\n                case 'r':\r\n                    piece = 'rook';\r\n                    break;\r\n                default:\r\n                    piece = undefined;\r\n                    break;\r\n            }\r\n\r\n            if (piece != undefined && color != undefined) {\r\n                rows.push(<Square dark={white ? false : true} key={key} piece={color + '-' + piece}></Square>)\r\n                if (key % 8 != 0) {\r\n                    white = !white;\r\n                }\r\n                key++;\r\n            } else {\r\n                for (let k = 0; k < Number(position[i][j]); k++) {\r\n                    rows.push(<Square dark={white ? false : true} key={key}></Square>)\r\n                    if (key % 8 != 0) {\r\n                        white = !white;\r\n                    }\r\n                    key++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return rows;\r\n}\r\n\r\nexport default function Chess() {\r\n\r\n    const [boardPosition, setBoardPosition] = useState(\r\n        [\r\n            // 'rnbqkbnr',\r\n            // 'pppppppp',\r\n            // '8',\r\n            // '8',\r\n            // '8',\r\n            // '8',\r\n            // 'PPPPPPPP',\r\n            // 'RNBQKBNR'\r\n        ]);\r\n\r\n    return (<>\r\n        <div className=\"chessContainer\">\r\n            <div className=\"chessGrid\">\r\n                <Board position={boardPosition}></Board>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}