{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladi Gotsin\\\\Desktop\\\\react\\\\src\\\\Chess.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  dark,\n  color,\n  piece\n}) {\n  let c = \"chessSquare piece\";\n  c = dark ? c + ' dark' : c;\n  let pieceToAdd = color ? 'white-' : 'dark-';\n  pieceToAdd += piece;\n  c += ' ' + pieceToAdd;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: c\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}\n_c = Square;\nfunction Row({\n  val\n}) {\n  let squares = [];\n  for (let i = 0; i < 8; i++) {\n    let dark = i % 2 == val ? true : false;\n    squares.push( /*#__PURE__*/_jsxDEV(Square, {\n      dark: dark,\n      piece: 'pawn',\n      color: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 22\n    }, this));\n  }\n  return squares;\n}\n_c2 = Row;\nfunction Board({\n  position\n}) {\n  let color;\n  for (let i = 0; i < position.length; i++) {\n    for (let j = 0; j < position[i].length; j++) {\n      if (position[i].charCodeAt(j) >= 97 && position[i].charCodeAt(j) <= 122) {\n        color = 'black';\n      } else if (position[i].charCodeAt(j) >= 65 && position[i].charCodeAt(j) <= 90) {\n        color = 'white';\n      } else {\n        color = undefined;\n      }\n      console.log(color);\n    }\n  }\n  let rows = [];\n  for (let i = 0; i < 8; i++) {\n    let v = i % 2 == 0 ? 1 : 0;\n    rows.push( /*#__PURE__*/_jsxDEV(Row, {\n      val: v\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this));\n  }\n  return rows;\n}\n_c3 = Board;\nexport default function Chess() {\n  _s();\n  const [boardPosition, setBoardPosition] = useState(['rnbqkbnr', 'pppppppp', '8', '8', '8', '8', 'PPPPPPPP', 'RNBQKBNR']);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chessContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chessGrid\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          position: boardPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Chess, \"Q9o56kyEmui5aptagA4iWx3dVSQ=\");\n_c4 = Chess;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Board\");\n$RefreshReg$(_c4, \"Chess\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","dark","color","piece","c","pieceToAdd","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Row","val","squares","i","push","_c2","Board","position","length","j","charCodeAt","undefined","console","log","rows","v","_c3","Chess","_s","boardPosition","setBoardPosition","children","_c4","$RefreshReg$"],"sources":["C:/Users/Vladi Gotsin/Desktop/react/src/Chess.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Square({ dark, color, piece }) {\r\n    let c = \"chessSquare piece\";\r\n    c = dark ? c + ' dark' : c;\r\n    let pieceToAdd = color ? 'white-' : 'dark-';\r\n    pieceToAdd += piece;\r\n    c += ' ' + pieceToAdd;\r\n    return <div className={c}></div>\r\n}\r\n\r\nfunction Row({ val }) {\r\n    let squares = [];\r\n\r\n    for (let i = 0; i < 8; i++) {\r\n        let dark = i % 2 == val ? true : false;\r\n        squares.push(<Square dark={dark} piece={'pawn'} color={true}></Square>)\r\n    }\r\n\r\n    return squares;\r\n}\r\n\r\nfunction Board({ position }) {\r\n\r\n    let color;\r\n\r\n    for (let i = 0; i < position.length; i++) {\r\n        for (let j = 0; j < position[i].length; j++) {\r\n            if (position[i].charCodeAt(j) >= 97 && position[i].charCodeAt(j) <= 122) {\r\n                color = 'black';\r\n            } else if (position[i].charCodeAt(j) >= 65 && position[i].charCodeAt(j) <= 90) {\r\n                color = 'white';\r\n            } else {\r\n                color = undefined;\r\n            }\r\n\r\n\r\n\r\n            console.log(color);\r\n        }\r\n    }\r\n\r\n    let rows = [];\r\n\r\n    for (let i = 0; i < 8; i++) {\r\n        let v = i % 2 == 0 ? 1 : 0;\r\n        rows.push(<Row val={v}></Row>)\r\n    }\r\n\r\n    return rows;\r\n}\r\n\r\nexport default function Chess() {\r\n\r\n    const [boardPosition, setBoardPosition] = useState(\r\n        [\r\n            'rnbqkbnr',\r\n            'pppppppp',\r\n            '8',\r\n            '8',\r\n            '8',\r\n            '8',\r\n            'PPPPPPPP',\r\n            'RNBQKBNR'\r\n        ]);\r\n\r\n    return (<>\r\n        <div className=\"chessContainer\">\r\n            <div className=\"chessGrid\">\r\n                <Board position={boardPosition}></Board>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}