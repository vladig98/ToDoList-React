{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladi Gotsin\\\\Desktop\\\\react\\\\src\\\\Chess.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  dark,\n  piece,\n  x,\n  y,\n  move\n}) {\n  let c = \"chessSquare piece\";\n  c = dark ? c + ' dark' : c;\n  let p, cl;\n  if (piece != undefined) {\n    c = c + ' ' + piece;\n    p = piece.split('-')[1][0];\n    p = p == 'k' ? piece.split('-')[1][1] == 'n' ? 'n' : p : p;\n    cl = piece.split('-')[0][0] == 'w' ? true : false;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: c,\n    x: x,\n    y: y,\n    onClick: () => move(p, cl, x, y)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n}\n_c = Square;\nfunction Board({\n  position,\n  move\n}) {\n  let color;\n  let piece;\n  let rows = [];\n  let key = 1;\n  let white = true;\n  let x = 0;\n  let y = 0;\n  for (let i = 0; i < position.length; i++) {\n    y = 0;\n    for (let j = 0; j < position[i].length; j++) {\n      if (position[i].charCodeAt(j) >= 97 && position[i].charCodeAt(j) <= 122) {\n        color = 'black';\n      } else if (position[i].charCodeAt(j) >= 65 && position[i].charCodeAt(j) <= 90) {\n        color = 'white';\n      } else {\n        color = undefined;\n      }\n      switch (position[i][j].toLowerCase()) {\n        case \"p\":\n          piece = 'pawn';\n          break;\n        case 'n':\n          piece = 'knight';\n          break;\n        case 'k':\n          piece = 'king';\n          break;\n        case 'q':\n          piece = 'queen';\n          break;\n        case 'b':\n          piece = 'bishop';\n          break;\n        case 'r':\n          piece = 'rook';\n          break;\n        default:\n          piece = undefined;\n          break;\n      }\n      if (piece != undefined && color != undefined) {\n        rows.push( /*#__PURE__*/_jsxDEV(Square, {\n          dark: white ? false : true,\n          piece: color + '-' + piece,\n          x: x,\n          y: y,\n          move: move\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 27\n        }, this));\n        if (key % 8 != 0) {\n          white = !white;\n        }\n        key++;\n        y++;\n      } else {\n        for (let k = 0; k < Number(position[i][j]); k++) {\n          rows.push( /*#__PURE__*/_jsxDEV(Square, {\n            dark: white ? false : true,\n            x: x,\n            y: y,\n            move: move\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 31\n          }, this));\n          if (key % 8 != 0) {\n            white = !white;\n          }\n          key++;\n          y++;\n        }\n      }\n    }\n    x++;\n  }\n  return rows;\n}\n_c2 = Board;\nexport default function Chess() {\n  _s();\n  const [boardPosition, setBoardPosition] = useState(['rnbqkbnr', 'pppppppp', '8', '8', '8', '8', 'PPPPPPPP', 'RNBQKBNR']);\n  const [selectedPiece, setSelectedPiece] = useState('');\n  const [oldX, setOldX] = useState('');\n  const [oldY, setOldY] = useState('');\n  function Move(p, c, x, y) {\n    if (selectedPiece) {\n      // if ([...document.querySelector(`[x=\"${x}\"][y=\"${y}\"]`).classList].some(x => x.includes('-'))) {\n      //     let currentPiece = [...document.querySelector(`[x=\"${x}\"][y=\"${y}\"]`).classList].filter(x => x.includes('-'));\n      //     document.querySelector(`[x=\"${x}\"][y=\"${y}\"]`).classList.remove(currentPiece);\n      //     document.querySelector(`[x=\"${x}\"][y=\"${y}\"]`).classList.add(selectedPiece);\n      // } else {\n      //     document.querySelector(`[x=\"${x}\"][y=\"${y}\"]`).classList.add(selectedPiece);\n      // }\n      // setSelectedPiece('')\n      // document.querySelector(`[x=\"${oldX}\"][y=\"${oldY}\"]`).classList.remove(selectedPiece);\n      // setOldX('')\n      // setOldY('')\n      let row = boardPosition[x];\n      let newRow, oldRow;\n      for (let i = 0; i < row.length; i++) {\n        if (row.charCodeAt(i) >= 48 && row.charCodeAt(i) <= 57) {\n          newRow += ' '.repeat(Number(row[i]));\n        } else {\n          newRow += row[i];\n        }\n      }\n      newRow[y] = selectedPiece;\n      for (let i = newRow.length - 1; i >= 0; i--) {\n        if (newRow[i] = ' ') {\n          if (i < newRow.length - 1) {\n            if (newRow.charCodeAt(i + 1) >= 48 && newRow.charCodeAt(i + 1) <= 57) {\n              newRow[i] = (Number(newRow[i + 1]) + 1).toString();\n              newRow = newRow.subString(0, newRow.length - 1);\n            } else {\n              newRow[i] = '1';\n            }\n          } else {\n            newRow[i] = '1';\n          }\n        }\n      }\n      row = boardPosition[oldX];\n      for (let i = 0; i < row.length; i++) {\n        if (row.charCodeAt(i) >= 48 && row.charCodeAt(i) <= 57) {\n          oldRow += ' '.repeat(Number(row[i]));\n        } else {\n          oldRow += row[i];\n        }\n      }\n    } else {\n      switch (p) {\n        case \"p\":\n          if (c) {\n            if (x == 6) {\n              console.log([x - 1, y], [x - 2, y]);\n            } else {\n              console.log([x - 1, y]);\n            }\n          } else {\n            if (x == 1) {\n              console.log([x + 1, y], [x + 2, y]);\n            } else {\n              console.log([x + 1, y]);\n            }\n          }\n          break;\n        default:\n          break;\n      }\n      if (p != undefined && c != undefined) {\n        // let pColor = c ? 'white' : 'black';\n        // let pPiece;\n\n        // switch (p) {\n        //     case 'p':\n        //         pPiece = 'pawn';\n        //         break;\n        //     case 'n':\n        //         pPiece = 'knight';\n        //         break;\n        //     case 'k':\n        //         pPiece = 'king';\n        //         break;\n        //     case 'q':\n        //         pPiece = 'queen'\n        //         break;\n        //     case 'b':\n        //         pPiece = 'bishop';\n        //         break;\n        //     case 'r':\n        //         pPiece = 'rook';\n        //         break;\n        //     default:\n        //         break;\n        // }\n\n        p = c ? p.toUpperCase() : p;\n        setSelectedPiece(p);\n        setOldX(x);\n        setOldY(y);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chessContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"grid\",\n        className: \"chessGrid\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          position: boardPosition,\n          move: Move\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Chess, \"LBTMGKOfSFswJj9aTZ6Nm7jh5MQ=\");\n_c3 = Chess;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Chess\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","dark","piece","x","y","move","c","p","cl","undefined","split","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","position","color","rows","key","white","i","length","j","charCodeAt","toLowerCase","push","k","Number","_c2","Chess","_s","boardPosition","setBoardPosition","selectedPiece","setSelectedPiece","oldX","setOldX","oldY","setOldY","Move","row","newRow","oldRow","repeat","toString","subString","console","log","toUpperCase","children","id","_c3","$RefreshReg$"],"sources":["C:/Users/Vladi Gotsin/Desktop/react/src/Chess.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Square({ dark, piece, x, y, move }) {\r\n    let c = \"chessSquare piece\";\r\n    c = dark ? c + ' dark' : c;\r\n\r\n    let p, cl;\r\n\r\n    if (piece != undefined) {\r\n        c = c + ' ' + piece;\r\n        p = piece.split('-')[1][0];\r\n        p = p == 'k' ? (piece.split('-')[1][1] == 'n' ? 'n' : p) : p;\r\n        cl = piece.split('-')[0][0] == 'w' ? true : false;\r\n    }\r\n\r\n    return <div className={c} x={x} y={y} onClick={() => move(p, cl, x, y)}></div>\r\n}\r\n\r\nfunction Board({ position, move }) {\r\n\r\n    let color;\r\n    let piece;\r\n    let rows = [];\r\n    let key = 1;\r\n    let white = true;\r\n    let x = 0;\r\n    let y = 0;\r\n\r\n    for (let i = 0; i < position.length; i++) {\r\n        y = 0;\r\n        for (let j = 0; j < position[i].length; j++) {\r\n            if (position[i].charCodeAt(j) >= 97 && position[i].charCodeAt(j) <= 122) {\r\n                color = 'black';\r\n            } else if (position[i].charCodeAt(j) >= 65 && position[i].charCodeAt(j) <= 90) {\r\n                color = 'white';\r\n            } else {\r\n                color = undefined;\r\n            }\r\n\r\n            switch (position[i][j].toLowerCase()) {\r\n                case \"p\":\r\n                    piece = 'pawn';\r\n                    break;\r\n                case 'n':\r\n                    piece = 'knight';\r\n                    break;\r\n                case 'k':\r\n                    piece = 'king';\r\n                    break;\r\n                case 'q':\r\n                    piece = 'queen';\r\n                    break;\r\n                case 'b':\r\n                    piece = 'bishop';\r\n                    break;\r\n                case 'r':\r\n                    piece = 'rook';\r\n                    break;\r\n                default:\r\n                    piece = undefined;\r\n                    break;\r\n            }\r\n\r\n            if (piece != undefined && color != undefined) {\r\n                rows.push(<Square dark={white ? false : true} key={key} piece={color + '-' + piece} x={x} y={y} move={move}></Square>)\r\n                if (key % 8 != 0) {\r\n                    white = !white;\r\n                }\r\n                key++\r\n                y++;\r\n            } else {\r\n                for (let k = 0; k < Number(position[i][j]); k++) {\r\n                    rows.push(<Square dark={white ? false : true} key={key} x={x} y={y} move={move}></Square>)\r\n                    if (key % 8 != 0) {\r\n                        white = !white;\r\n                    }\r\n                    key++;\r\n                    y++\r\n                }\r\n            }\r\n        }\r\n        x++;\r\n    }\r\n\r\n    return rows;\r\n}\r\n\r\nexport default function Chess() {\r\n\r\n    const [boardPosition, setBoardPosition] = useState(\r\n        [\r\n            'rnbqkbnr',\r\n            'pppppppp',\r\n            '8',\r\n            '8',\r\n            '8',\r\n            '8',\r\n            'PPPPPPPP',\r\n            'RNBQKBNR'\r\n        ]);\r\n\r\n    const [selectedPiece, setSelectedPiece] = useState('');\r\n    const [oldX, setOldX] = useState('');\r\n    const [oldY, setOldY] = useState('');\r\n\r\n    function Move(p, c, x, y) {\r\n        if (selectedPiece) {\r\n            // if ([...document.querySelector(`[x=\"${x}\"][y=\"${y}\"]`).classList].some(x => x.includes('-'))) {\r\n            //     let currentPiece = [...document.querySelector(`[x=\"${x}\"][y=\"${y}\"]`).classList].filter(x => x.includes('-'));\r\n            //     document.querySelector(`[x=\"${x}\"][y=\"${y}\"]`).classList.remove(currentPiece);\r\n            //     document.querySelector(`[x=\"${x}\"][y=\"${y}\"]`).classList.add(selectedPiece);\r\n            // } else {\r\n            //     document.querySelector(`[x=\"${x}\"][y=\"${y}\"]`).classList.add(selectedPiece);\r\n            // }\r\n            // setSelectedPiece('')\r\n            // document.querySelector(`[x=\"${oldX}\"][y=\"${oldY}\"]`).classList.remove(selectedPiece);\r\n            // setOldX('')\r\n            // setOldY('')\r\n            let row = boardPosition[x];\r\n            let newRow, oldRow;\r\n\r\n            for (let i = 0; i < row.length; i++) {\r\n                if (row.charCodeAt(i) >= 48 && row.charCodeAt(i) <= 57) {\r\n                    newRow += ' '.repeat(Number(row[i]))\r\n                } else {\r\n                    newRow += row[i];\r\n                }\r\n            }\r\n\r\n            newRow[y] = selectedPiece;\r\n\r\n            for (let i = newRow.length - 1; i >= 0; i--) {\r\n                if (newRow[i] = ' ') {\r\n                    if (i < newRow.length - 1) {\r\n                        if (newRow.charCodeAt(i + 1) >= 48 && newRow.charCodeAt(i + 1) <= 57) {\r\n                            newRow[i] = (Number(newRow[i + 1]) + 1).toString();\r\n                            newRow = newRow.subString(0, newRow.length - 1);\r\n                        } else {\r\n                            newRow[i] = '1';\r\n                        }\r\n                    } else {\r\n                        newRow[i] = '1';\r\n                    }\r\n                }\r\n            }\r\n\r\n            row = boardPosition[oldX];\r\n\r\n            for (let i = 0; i < row.length; i++) {\r\n                if (row.charCodeAt(i) >= 48 && row.charCodeAt(i) <= 57) {\r\n                    oldRow += ' '.repeat(Number(row[i]))\r\n                } else {\r\n                    oldRow += row[i];\r\n                }\r\n            }\r\n\r\n\r\n        } else {\r\n            switch (p) {\r\n                case \"p\":\r\n                    if (c) {\r\n                        if (x == 6) {\r\n                            console.log([x - 1, y], [x - 2, y])\r\n                        } else {\r\n                            console.log([x - 1, y])\r\n                        }\r\n                    } else {\r\n                        if (x == 1) {\r\n                            console.log([x + 1, y], [x + 2, y])\r\n                        } else {\r\n                            console.log([x + 1, y])\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            if (p != undefined && c != undefined) {\r\n                // let pColor = c ? 'white' : 'black';\r\n                // let pPiece;\r\n\r\n                // switch (p) {\r\n                //     case 'p':\r\n                //         pPiece = 'pawn';\r\n                //         break;\r\n                //     case 'n':\r\n                //         pPiece = 'knight';\r\n                //         break;\r\n                //     case 'k':\r\n                //         pPiece = 'king';\r\n                //         break;\r\n                //     case 'q':\r\n                //         pPiece = 'queen'\r\n                //         break;\r\n                //     case 'b':\r\n                //         pPiece = 'bishop';\r\n                //         break;\r\n                //     case 'r':\r\n                //         pPiece = 'rook';\r\n                //         break;\r\n                //     default:\r\n                //         break;\r\n                // }\r\n\r\n                p = c ? p.toUpperCase() : p;\r\n\r\n                setSelectedPiece(p);\r\n                setOldX(x);\r\n                setOldY(y);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"chessContainer\">\r\n            <div id=\"grid\" className=\"chessGrid\">\r\n                <Board position={boardPosition} move={Move}></Board>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}