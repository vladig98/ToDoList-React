{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladi Gotsin\\\\Desktop\\\\react\\\\src\\\\Chess.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DIM = 8; //8x8 Board\n\nclass Square extends Comment {\n  constructor(x, y, piece, color) {\n    this.x = x;\n    this.y = y;\n    this.piece = piece;\n    this.color = color;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'chessSquare piece',\n      x: this.x,\n      y: this.y,\n      onClick: () => move(p, cl, x, y)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n}\nclass Board extends Comment {\n  constructor() {\n    this.position = [];\n    for (let i = 0; i < DIM; i++) {\n      this.position[i] = [];\n      for (let j = 0; j < DIM; j++) {\n        this.position[i].push(new Square(i, j));\n      }\n    }\n  }\n}\nexport default function Chess() {\n  _s();\n  const [boardPosition, setBoardPosition] = useState(['rnbqkbnr', 'pppppppp', '8', '8', '8', '8', 'PPPPPPPP', 'RNBQKBNR']);\n  const [selectedPiece, setSelectedPiece] = useState('');\n  const [oldX, setOldX] = useState('');\n  const [oldY, setOldY] = useState('');\n  const [allowedMoves, setAllowedMoves] = useState([]);\n  const [whiteToMove, setWhiteToMove] = useState(true);\n  const [canWhiteShortCastle, setCanWhiteShortCastle] = useState(true);\n  const [canWhiteLongCastle, setCanWhiteLongCastle] = useState(true);\n  const [canBlackShortCastle, setCanBlackShortCastle] = useState(true);\n  const [canBlackLongCastle, setCanBlackLongCastle] = useState(true);\n  const [isWhiteInCheck, setIsWhiteInCheck] = useState(false);\n  const [isBlackInCheck, setIsBlackInCheck] = useState(false);\n  function handleCapture(x, y, pieceToCapture) {\n    if (selectedPiece.charCodeAt(0) >= 65 && selectedPiece.charCodeAt(0) <= 90) {\n      if (pieceToCapture.charCodeAt(0) >= 65 && pieceToCapture.charCodeAt(0) <= 90) {\n        return;\n      }\n    }\n    if (selectedPiece.charCodeAt(0) >= 97 && selectedPiece.charCodeAt(0) <= 122) {\n      if (pieceToCapture.charCodeAt(0) >= 97 && pieceToCapture.charCodeAt(0) <= 122) {\n        return;\n      }\n    }\n    let oldRow = boardPosition[oldX];\n    let newRow = boardPosition[x];\n    oldRow = convertFenToString(oldRow);\n    newRow = convertFenToString(newRow);\n    oldRow = oldRow.substring(0, oldY) + ' ' + oldRow.substring(oldY + 1, oldRow.length);\n    newRow = newRow.substring(0, y) + selectedPiece + newRow.substring(y + 1, newRow.length);\n    oldRow = convertStringToFen(oldRow);\n    newRow = convertStringToFen(newRow);\n    let newBoard = [];\n    for (let i = 0; i < boardPosition.length; i++) {\n      if (i == x || i == oldX) {\n        if (x == oldX) {\n          //TO DO: Implement capturing on the same row\n          console.warn(\"Implement capturing on the same row\");\n        } else if (i == x) {\n          newBoard.push(newRow);\n        } else if (i == oldX) {\n          newBoard.push(oldRow);\n        }\n      } else {\n        newBoard.push(boardPosition[i]);\n      }\n    }\n    setBoardPosition(newBoard);\n    setWhiteToMove(!whiteToMove);\n  }\n  function convertFenToString(fen) {\n    let result = '';\n    for (let i = 0; i < fen.length; i++) {\n      if (fen.charCodeAt(i) >= 48 && fen.charCodeAt(i) <= 57) {\n        result += ' '.repeat(Number(fen[i]));\n      } else {\n        result += fen[i];\n      }\n    }\n    return result;\n  }\n  function convertStringToFen(str) {\n    for (let i = str.length - 1; i >= 0; i--) {\n      if (str[i] == ' ') {\n        if (i < str.length - 1) {\n          if (str.charCodeAt(i + 1) >= 48 && str.charCodeAt(i + 1) <= 57) {\n            str = str.substring(0, i) + (Number(str[i + 1]) + 1).toString() + str.substring(i + 1, str.length);\n            str = str.slice(0, i + 1) + str.slice(i + 2);\n          } else {\n            str = str.substring(0, i) + '1' + str.substring(i + 1, str.length);\n          }\n        } else {\n          str = str.substring(0, i) + '1' + str.substring(i + 1, str.length);\n        }\n      }\n    }\n    return str;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chessContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"grid\",\n        className: \"chessGrid\",\n        children: new Board()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Chess, \"IhlxSP5GS1lVgwjDIGSJHLPT3iM=\");\n_c = Chess;\nvar _c;\n$RefreshReg$(_c, \"Chess\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DIM","Square","Comment","constructor","x","y","piece","color","render","className","onClick","move","p","cl","fileName","_jsxFileName","lineNumber","columnNumber","Board","position","i","j","push","Chess","_s","boardPosition","setBoardPosition","selectedPiece","setSelectedPiece","oldX","setOldX","oldY","setOldY","allowedMoves","setAllowedMoves","whiteToMove","setWhiteToMove","canWhiteShortCastle","setCanWhiteShortCastle","canWhiteLongCastle","setCanWhiteLongCastle","canBlackShortCastle","setCanBlackShortCastle","canBlackLongCastle","setCanBlackLongCastle","isWhiteInCheck","setIsWhiteInCheck","isBlackInCheck","setIsBlackInCheck","handleCapture","pieceToCapture","charCodeAt","oldRow","newRow","convertFenToString","substring","length","convertStringToFen","newBoard","console","warn","fen","result","repeat","Number","str","toString","slice","children","id","_c","$RefreshReg$"],"sources":["C:/Users/Vladi Gotsin/Desktop/react/src/Chess.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst DIM = 8; //8x8 Board\r\n\r\nclass Square extends Comment {\r\n    constructor(x, y, piece, color) {\r\n        this.x = x\r\n        this.y = y\r\n        this.piece = piece\r\n        this.color = color\r\n    }\r\n\r\n    onClick = function () {\r\n        //TODO: Implement clicking a square\r\n    }\r\n\r\n    render() {\r\n        return <div className={'chessSquare piece'} x={this.x} y={this.y} onClick={() => move(p, cl, x, y)}></div>\r\n    }\r\n}\r\n\r\nclass Board extends Comment {\r\n    constructor() {\r\n        this.position = []\r\n\r\n        for (let i = 0; i < DIM; i++) {\r\n            this.position[i] = [];\r\n\r\n            for (let j = 0; j < DIM; j++) {\r\n                this.position[i].push(new Square(i, j))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default function Chess() {\r\n\r\n    const [boardPosition, setBoardPosition] = useState(\r\n        [\r\n            'rnbqkbnr',\r\n            'pppppppp',\r\n            '8',\r\n            '8',\r\n            '8',\r\n            '8',\r\n            'PPPPPPPP',\r\n            'RNBQKBNR'\r\n        ]);\r\n\r\n    const [selectedPiece, setSelectedPiece] = useState('');\r\n    const [oldX, setOldX] = useState('');\r\n    const [oldY, setOldY] = useState('');\r\n    const [allowedMoves, setAllowedMoves] = useState([])\r\n    const [whiteToMove, setWhiteToMove] = useState(true);\r\n    const [canWhiteShortCastle, setCanWhiteShortCastle] = useState(true);\r\n    const [canWhiteLongCastle, setCanWhiteLongCastle] = useState(true);\r\n    const [canBlackShortCastle, setCanBlackShortCastle] = useState(true);\r\n    const [canBlackLongCastle, setCanBlackLongCastle] = useState(true);\r\n    const [isWhiteInCheck, setIsWhiteInCheck] = useState(false);\r\n    const [isBlackInCheck, setIsBlackInCheck] = useState(false);\r\n\r\n    function handleCapture(x, y, pieceToCapture) {\r\n        if (selectedPiece.charCodeAt(0) >= 65 && selectedPiece.charCodeAt(0) <= 90) {\r\n            if (pieceToCapture.charCodeAt(0) >= 65 && pieceToCapture.charCodeAt(0) <= 90) {\r\n                return\r\n            }\r\n        }\r\n\r\n        if (selectedPiece.charCodeAt(0) >= 97 && selectedPiece.charCodeAt(0) <= 122) {\r\n            if (pieceToCapture.charCodeAt(0) >= 97 && pieceToCapture.charCodeAt(0) <= 122) {\r\n                return\r\n            }\r\n        }\r\n\r\n        let oldRow = boardPosition[oldX];\r\n        let newRow = boardPosition[x];\r\n\r\n        oldRow = convertFenToString(oldRow);\r\n        newRow = convertFenToString(newRow);\r\n\r\n        oldRow = oldRow.substring(0, oldY) + ' ' + oldRow.substring(oldY + 1, oldRow.length)\r\n        newRow = newRow.substring(0, y) + selectedPiece + newRow.substring(y + 1, newRow.length)\r\n\r\n        oldRow = convertStringToFen(oldRow)\r\n        newRow = convertStringToFen(newRow)\r\n\r\n        let newBoard = [];\r\n\r\n        for (let i = 0; i < boardPosition.length; i++) {\r\n            if (i == x || i == oldX) {\r\n                if (x == oldX) {\r\n                    //TO DO: Implement capturing on the same row\r\n                    console.warn(\"Implement capturing on the same row\")\r\n                }\r\n                else if (i == x) {\r\n                    newBoard.push(newRow);\r\n                } else if (i == oldX) {\r\n                    newBoard.push(oldRow);\r\n                }\r\n            } else {\r\n                newBoard.push(boardPosition[i]);\r\n            }\r\n        }\r\n\r\n        setBoardPosition(newBoard)\r\n        setWhiteToMove(!whiteToMove)\r\n    }\r\n\r\n    function convertFenToString(fen) {\r\n        let result = '';\r\n\r\n        for (let i = 0; i < fen.length; i++) {\r\n            if (fen.charCodeAt(i) >= 48 && fen.charCodeAt(i) <= 57) {\r\n                result += ' '.repeat(Number(fen[i]))\r\n            } else {\r\n                result += fen[i];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function convertStringToFen(str) {\r\n        for (let i = str.length - 1; i >= 0; i--) {\r\n            if (str[i] == ' ') {\r\n                if (i < str.length - 1) {\r\n                    if (str.charCodeAt(i + 1) >= 48 && str.charCodeAt(i + 1) <= 57) {\r\n                        str = str.substring(0, i) + (Number(str[i + 1]) + 1).toString() + str.substring(i + 1, str.length);\r\n                        str = str.slice(0, i + 1) + str.slice(i + 2);\r\n                    } else {\r\n                        str = str.substring(0, i) + '1' + str.substring(i + 1, str.length);\r\n                    }\r\n                } else {\r\n                    str = str.substring(0, i) + '1' + str.substring(i + 1, str.length);\r\n                }\r\n            }\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"chessContainer\">\r\n            <div id=\"grid\" className=\"chessGrid\">\r\n                {new Board()}\r\n            </div>\r\n        </div>\r\n    </>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}