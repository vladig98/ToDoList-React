{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladi Gotsin\\\\Desktop\\\\react\\\\src\\\\Chess.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DIM = 8; //8x8 Board\n\nfunction IsUpperCase(value) {\n  return value.charCodeAt(0) >= 65 && value.charCodeAt(0) <= 90;\n}\n_c = IsUpperCase;\nfunction IsLowerCase(value) {\n  return value.charCodeAt(0) >= 97 && value.charCodeAt(0) <= 122;\n}\n_c2 = IsLowerCase;\nfunction IsDigit(value) {\n  return value.charCodeAt(0) >= 48 && value.charCodeAt(0) <= 57;\n}\n_c3 = IsDigit;\nfunction ConvertFENPieceToPiece(value) {\n  if (IsUpperCase(value)) {}\n}\n_c4 = ConvertFENPieceToPiece;\nclass Square extends Component {\n  constructor(props) {\n    super(props);\n    this.onClick = function () {\n      //TODO: Implement clicking a square\n    };\n    this.x = props.x;\n    this.y = props.y;\n    this.fenPiece = props.piece;\n    this.color = props.color;\n    this.piece = ConvertFENPieceToPiece(this.fenPiece);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chessSquare piece ${this.color} ${this.piece}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n}\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: ['rnbqkbnr', 'pppppppp', '8', '8', '8', '8', 'PPPPPPPP', 'RNBQKBNR']\n    };\n  }\n  render() {\n    const squares = [];\n    let squareColorIsWhite = true;\n    for (let i = 0; i < DIM; i++) {\n      for (let j = 0; j < DIM; j++) {\n        const piece = this.state.position[i].charAt(j);\n        let color = squareColorIsWhite ? \"\" : \"dark\";\n        squares.push( /*#__PURE__*/_jsxDEV(Square, {\n          x: i,\n          y: j,\n          piece: piece,\n          color: color\n        }, `${i}-${j}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 30\n        }, this));\n        squareColorIsWhite = !squareColorIsWhite;\n      }\n      squareColorIsWhite = !squareColorIsWhite;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chessGrid\",\n      children: squares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default function Chess() {\n  _s();\n  const [boardPosition, setBoardPosition] = useState(['rnbqkbnr', 'pppppppp', '8', '8', '8', '8', 'PPPPPPPP', 'RNBQKBNR']);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chessContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"grid\",\n        className: \"chessGrid\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Chess, \"Q9o56kyEmui5aptagA4iWx3dVSQ=\");\n_c5 = Chess;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"IsUpperCase\");\n$RefreshReg$(_c2, \"IsLowerCase\");\n$RefreshReg$(_c3, \"IsDigit\");\n$RefreshReg$(_c4, \"ConvertFENPieceToPiece\");\n$RefreshReg$(_c5, \"Chess\");","map":{"version":3,"names":["useState","Component","jsxDEV","_jsxDEV","Fragment","_Fragment","DIM","IsUpperCase","value","charCodeAt","_c","IsLowerCase","_c2","IsDigit","_c3","ConvertFENPieceToPiece","_c4","Square","constructor","props","onClick","x","y","fenPiece","piece","color","render","className","fileName","_jsxFileName","lineNumber","columnNumber","Board","state","position","squares","squareColorIsWhite","i","j","charAt","push","children","Chess","_s","boardPosition","setBoardPosition","id","_c5","$RefreshReg$"],"sources":["C:/Users/Vladi Gotsin/Desktop/react/src/Chess.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nconst DIM = 8; //8x8 Board\r\n\r\nfunction IsUpperCase(value) {\r\n    return value.charCodeAt(0) >= 65 && value.charCodeAt(0) <= 90\r\n}\r\n\r\nfunction IsLowerCase(value) {\r\n    return value.charCodeAt(0) >= 97 && value.charCodeAt(0) <= 122\r\n}\r\n\r\nfunction IsDigit(value) {\r\n    return value.charCodeAt(0) >= 48 && value.charCodeAt(0) <= 57\r\n}\r\n\r\nfunction ConvertFENPieceToPiece(value) {\r\n    if (IsUpperCase(value)) {\r\n\r\n    }\r\n}\r\n\r\nclass Square extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.x = props.x\r\n        this.y = props.y\r\n        this.fenPiece = props.piece\r\n        this.color = props.color\r\n        this.piece = ConvertFENPieceToPiece(this.fenPiece)\r\n    }\r\n\r\n    onClick = function () {\r\n        //TODO: Implement clicking a square\r\n    }\r\n\r\n    render() {\r\n        return <div className={`chessSquare piece ${this.color} ${this.piece}`}></div>\r\n    }\r\n}\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            position: [\r\n                'rnbqkbnr',\r\n                'pppppppp',\r\n                '8',\r\n                '8',\r\n                '8',\r\n                '8',\r\n                'PPPPPPPP',\r\n                'RNBQKBNR'\r\n            ]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const squares = [];\r\n        let squareColorIsWhite = true;\r\n        for (let i = 0; i < DIM; i++) {\r\n            for (let j = 0; j < DIM; j++) {\r\n                const piece = this.state.position[i].charAt(j);\r\n                let color = squareColorIsWhite ? \"\" : \"dark\"\r\n                squares.push(<Square key={`${i}-${j}`} x={i} y={j} piece={piece} color={color} />);\r\n                squareColorIsWhite = !squareColorIsWhite\r\n            }\r\n            squareColorIsWhite = !squareColorIsWhite\r\n        }\r\n        return (\r\n            <div className=\"chessGrid\">\r\n                {squares}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default function Chess() {\r\n\r\n    const [boardPosition, setBoardPosition] = useState(\r\n        [\r\n            'rnbqkbnr',\r\n            'pppppppp',\r\n            '8',\r\n            '8',\r\n            '8',\r\n            '8',\r\n            'PPPPPPPP',\r\n            'RNBQKBNR'\r\n        ]);\r\n\r\n    return (<>\r\n        <div className=\"chessContainer\">\r\n            <div id=\"grid\" className=\"chessGrid\">\r\n                <Board />\r\n            </div>\r\n        </div>\r\n    </>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}