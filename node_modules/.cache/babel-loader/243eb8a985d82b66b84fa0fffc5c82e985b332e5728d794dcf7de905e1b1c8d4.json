{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladi Gotsin\\\\Desktop\\\\react\\\\src\\\\Chess.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DIM = 8; //8x8 Board\n\n//Checks if a character is Uppercase\nfunction IsUpperCase(value) {\n  return value.charCodeAt(0) >= 65 && value.charCodeAt(0) <= 90;\n}\n\n//Checks if a character is Lowercase\n_c = IsUpperCase;\nfunction IsLowerCase(value) {\n  return value.charCodeAt(0) >= 97 && value.charCodeAt(0) <= 122;\n}\n\n//Checks if a character is a Digit\n_c2 = IsLowerCase;\nfunction IsDigit(value) {\n  return value.charCodeAt(0) >= 48 && value.charCodeAt(0) <= 57;\n}\n_c3 = IsDigit;\nfunction ConvertFENtoPiece(letter) {\n  switch (letter.toLowerCase()) {\n    case \"p\":\n      return 'pawn';\n    case \"n\":\n      return \"knight\";\n    case \"k\":\n      return \"king\";\n    case \"q\":\n      return \"queen\";\n    case \"r\":\n      return \"rook\";\n    case \"b\":\n      return \"bishop\";\n    default:\n      return \"\";\n  }\n}\n_c4 = ConvertFENtoPiece;\nfunction ConvertFENPieceToPiece(value) {\n  if (IsUpperCase(value)) {\n    return `white-${ConvertFENtoPiece(value)}`;\n  }\n  if (IsLowerCase(value)) {\n    return `black-${ConvertFENtoPiece(value)}`;\n  }\n  return \"\";\n}\n_c5 = ConvertFENPieceToPiece;\nfunction ConvertFenToString(value) {\n  let result = [];\n  for (let i = 0; i < value.length; i++) {\n    if (IsDigit(value.charAt(i))) {\n      for (let j = 0; j < Number(value.charAt(i)); j++) {\n        result.push(\" \");\n      }\n    } else {\n      result.push(value.charAt(i));\n    }\n  }\n  return result.join(\"\");\n}\n_c6 = ConvertFenToString;\nclass Square extends Component {\n  constructor(props) {\n    super(props);\n    this.onClick = () => {\n      if (selectedPiece) {\n        this.props.setSelectedPiece();\n      } else {\n        this.props.setSelectedPiece(this.piece);\n      }\n      this.props.getPossibleMoves(this);\n    };\n    this.x = props.x;\n    this.y = props.y;\n    this.fenPiece = props.piece;\n    this.color = props.color;\n    this.piece = ConvertFENPieceToPiece(this.fenPiece);\n  }\n  render() {\n    let styles = ['chessSquare', 'piece'];\n    styles.push(this.color);\n    styles.push(this.piece);\n    if (this.props.possibleMoves.some(move => move.x === this.x && move.y === this.y)) {\n      styles.push(\"possibleMove\");\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: this.onClick,\n      className: styles.filter(Boolean).join(\" \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }, this);\n  }\n}\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: ['rnbqkbnr', 'pppppppp', '8', '8', '8', '8', 'PPPPPPPP', 'RNBQKBNR'],\n      possibleMoves: []\n    };\n    this.selectedPiece = props.selectedPiece;\n    this.setSelectedPiece = props.setSelectedPiece;\n  }\n  getPossibleMoves(square) {\n    const squares = this.renderSquares();\n    let possibleMoves = [];\n    if (square.piece) {\n      let color = square.piece.split('-')[0];\n      let piece = square.piece.split('-')[1];\n      switch (piece) {\n        case \"pawn\":\n          if (color === \"white\") {\n            //move one square ahead\n            const targetSquare1 = squares.find(s => s.props.x === square.x - 1 && s.props.y === square.y);\n            if (targetSquare1 && !targetSquare1.props.piece) {\n              possibleMoves.push({\n                x: square.x - 1,\n                y: square.y\n              });\n            }\n\n            //move two squares on the very first move\n            const targetSquare2 = squares.find(s => s.props.x === square.x - 2 && s.props.y === square.y);\n            if (square.x === 6 && targetSquare2 && !targetSquare2.props.piece && !targetSquare1.props.piece) {\n              possibleMoves.push({\n                x: square.x - 2,\n                y: square.y\n              });\n            }\n\n            //capture to the left diagonal\n            const leftNeigborToPotentuallyCapture1 = squares.find(s => s.props.x === square.x - 1 && s.props.y === square.y - 1);\n            if (leftNeigborToPotentuallyCapture1 && leftNeigborToPotentuallyCapture1.props.piece && ConvertFENPieceToPiece(leftNeigborToPotentuallyCapture1.props.piece).split('-')[0] != square.piece.split(\"-\")[0]) {\n              possibleMoves.push({\n                x: square.x - 1,\n                y: square.y - 1\n              });\n            }\n\n            //capture to the right diagonal\n            const leftNeigborToPotentuallyCapture2 = squares.find(s => s.props.x === square.x - 1 && s.props.y === square.y + 1);\n            if (leftNeigborToPotentuallyCapture2 && leftNeigborToPotentuallyCapture2.props.piece && ConvertFENPieceToPiece(leftNeigborToPotentuallyCapture2.props.piece).split('-')[0] != square.piece.split(\"-\")[0]) {\n              possibleMoves.push({\n                x: square.x - 1,\n                y: square.y + 1\n              });\n            }\n\n            //TODO: Implement the french fancy move - En passant\n            //TODO: Implement promotion\n          } else {\n            const targetSquare1 = squares.find(s => s.props.x === square.x + 1 && s.props.y === square.y);\n            if (targetSquare1 && !targetSquare1.props.piece) {\n              possibleMoves.push({\n                x: square.x + 1,\n                y: square.y\n              });\n            }\n\n            //move two squares on the very first move\n            const targetSquare2 = squares.find(s => s.props.x === square.x + 2 && s.props.y === square.y);\n            if (square.x === 1 && targetSquare2 && !targetSquare2.props.piece && !targetSquare1.props.piece) {\n              possibleMoves.push({\n                x: square.x + 2,\n                y: square.y\n              });\n            }\n\n            //capture to the left diagonal\n            const leftNeigborToPotentuallyCapture1 = squares.find(s => s.props.x === square.x + 1 && s.props.y === square.y - 1);\n            if (leftNeigborToPotentuallyCapture1 && leftNeigborToPotentuallyCapture1.props.piece && ConvertFENPieceToPiece(leftNeigborToPotentuallyCapture1.props.piece).split('-')[0] != square.piece.split(\"-\")[0]) {\n              possibleMoves.push({\n                x: square.x + 1,\n                y: square.y - 1\n              });\n            }\n\n            //capture to the right diagonal\n            const leftNeigborToPotentuallyCapture2 = squares.find(s => s.props.x === square.x + 1 && s.props.y === square.y + 1);\n            if (leftNeigborToPotentuallyCapture2 && leftNeigborToPotentuallyCapture2.props.piece && ConvertFENPieceToPiece(leftNeigborToPotentuallyCapture2.props.piece).split('-')[0] != square.piece.split(\"-\")[0]) {\n              possibleMoves.push({\n                x: square.x + 1,\n                y: square.y + 1\n              });\n            }\n\n            //TODO: Implement the french fancy move - En passant\n            //TODO: Implement promotion\n          }\n          break;\n        case \"rook\":\n          break;\n        case \"bishop\":\n          break;\n        case \"knight\":\n          break;\n        case \"king\":\n          break;\n        case \"queen\":\n          break;\n        default:\n          break;\n      }\n    }\n    console.log(\"Possible Moves:\", possibleMoves);\n    this.setState({\n      possibleMoves\n    });\n  }\n  renderSquares() {\n    let squareColorIsWhite = true;\n    const squares = [];\n    for (let i = 0; i < DIM; i++) {\n      let row = ConvertFenToString(this.state.position[i]);\n      for (let j = 0; j < DIM; j++) {\n        const piece = row.charAt(j);\n        let color = squareColorIsWhite ? \"\" : \"dark\";\n        squares.push( /*#__PURE__*/_jsxDEV(Square, {\n          getPossibleMoves: this.getPossibleMoves.bind(this),\n          x: i,\n          y: j,\n          piece: piece.trim(),\n          color: color,\n          setSelectedPiece: this.setSelectedPiece,\n          possibleMoves: this.state.possibleMoves\n        }, `${i}-${j}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this));\n        squareColorIsWhite = !squareColorIsWhite;\n      }\n      squareColorIsWhite = !squareColorIsWhite;\n    }\n    return squares;\n  }\n  render() {\n    const squares = this.renderSquares();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chessGrid\",\n      children: squares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default function Chess() {\n  _s();\n  const [selectedPiece, setSelectedPiece] = useState('');\n  function updateSelectedPiece(value) {\n    setSelectedPiece(value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chessContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"grid\",\n        className: \"chessGrid\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          selectedPiece: selectedPiece,\n          setSelectedPiece: updateSelectedPiece\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Chess, \"/DDRteNDRyx+r7QrSXgLN2mitW4=\");\n_c7 = Chess;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"IsUpperCase\");\n$RefreshReg$(_c2, \"IsLowerCase\");\n$RefreshReg$(_c3, \"IsDigit\");\n$RefreshReg$(_c4, \"ConvertFENtoPiece\");\n$RefreshReg$(_c5, \"ConvertFENPieceToPiece\");\n$RefreshReg$(_c6, \"ConvertFenToString\");\n$RefreshReg$(_c7, \"Chess\");","map":{"version":3,"names":["useState","useEffect","Component","jsxDEV","_jsxDEV","Fragment","_Fragment","DIM","IsUpperCase","value","charCodeAt","_c","IsLowerCase","_c2","IsDigit","_c3","ConvertFENtoPiece","letter","toLowerCase","_c4","ConvertFENPieceToPiece","_c5","ConvertFenToString","result","i","length","charAt","j","Number","push","join","_c6","Square","constructor","props","onClick","selectedPiece","setSelectedPiece","piece","getPossibleMoves","x","y","fenPiece","color","render","styles","possibleMoves","some","move","className","filter","Boolean","fileName","_jsxFileName","lineNumber","columnNumber","Board","state","position","square","squares","renderSquares","split","targetSquare1","find","s","targetSquare2","leftNeigborToPotentuallyCapture1","leftNeigborToPotentuallyCapture2","console","log","setState","squareColorIsWhite","row","bind","trim","children","Chess","_s","updateSelectedPiece","id","_c7","$RefreshReg$"],"sources":["C:/Users/Vladi Gotsin/Desktop/react/src/Chess.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nconst DIM = 8; //8x8 Board\r\n\r\n//Checks if a character is Uppercase\r\nfunction IsUpperCase(value) {\r\n    return value.charCodeAt(0) >= 65 && value.charCodeAt(0) <= 90\r\n}\r\n\r\n//Checks if a character is Lowercase\r\nfunction IsLowerCase(value) {\r\n    return value.charCodeAt(0) >= 97 && value.charCodeAt(0) <= 122\r\n}\r\n\r\n//Checks if a character is a Digit\r\nfunction IsDigit(value) {\r\n    return value.charCodeAt(0) >= 48 && value.charCodeAt(0) <= 57\r\n}\r\n\r\nfunction ConvertFENtoPiece(letter) {\r\n    switch (letter.toLowerCase()) {\r\n        case \"p\":\r\n            return 'pawn'\r\n        case \"n\":\r\n            return \"knight\"\r\n        case \"k\":\r\n            return \"king\";\r\n        case \"q\":\r\n            return \"queen\";\r\n        case \"r\":\r\n            return \"rook\";\r\n        case \"b\":\r\n            return \"bishop\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nfunction ConvertFENPieceToPiece(value) {\r\n    if (IsUpperCase(value)) {\r\n        return `white-${ConvertFENtoPiece(value)}`;\r\n    }\r\n\r\n    if (IsLowerCase(value)) {\r\n        return `black-${ConvertFENtoPiece(value)}`;\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction ConvertFenToString(value) {\r\n    let result = [];\r\n\r\n    for (let i = 0; i < value.length; i++) {\r\n        if (IsDigit(value.charAt(i))) {\r\n            for (let j = 0; j < Number(value.charAt(i)); j++) {\r\n                result.push(\" \")\r\n            }\r\n        } else {\r\n            result.push(value.charAt(i))\r\n        }\r\n    }\r\n\r\n    return result.join(\"\");\r\n}\r\n\r\nclass Square extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.x = props.x\r\n        this.y = props.y\r\n        this.fenPiece = props.piece\r\n        this.color = props.color\r\n        this.piece = ConvertFENPieceToPiece(this.fenPiece)\r\n    }\r\n\r\n    onClick = () => {\r\n        if (selectedPiece) {\r\n            this.props.setSelectedPiece()\r\n        } else {\r\n            this.props.setSelectedPiece(this.piece)\r\n        }\r\n        this.props.getPossibleMoves(this)\r\n    }\r\n\r\n    render() {\r\n        let styles = ['chessSquare', 'piece'];\r\n        styles.push(this.color);\r\n        styles.push(this.piece);\r\n\r\n        if (this.props.possibleMoves.some(move => move.x === this.x && move.y === this.y)) {\r\n            styles.push(\"possibleMove\");\r\n        }\r\n\r\n        return <div onClick={this.onClick} className={styles.filter(Boolean).join(\" \")}></div>\r\n    }\r\n}\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            position: [\r\n                'rnbqkbnr',\r\n                'pppppppp',\r\n                '8',\r\n                '8',\r\n                '8',\r\n                '8',\r\n                'PPPPPPPP',\r\n                'RNBQKBNR'\r\n            ],\r\n            possibleMoves: []\r\n        };\r\n        this.selectedPiece = props.selectedPiece;\r\n        this.setSelectedPiece = props.setSelectedPiece;\r\n    }\r\n\r\n    getPossibleMoves(square) {\r\n        const squares = this.renderSquares();\r\n        let possibleMoves = [];\r\n\r\n        if (square.piece) {\r\n            let color = square.piece.split('-')[0];\r\n            let piece = square.piece.split('-')[1];\r\n            switch (piece) {\r\n                case \"pawn\":\r\n                    if (color === \"white\") {\r\n                        //move one square ahead\r\n                        const targetSquare1 = squares.find(s => s.props.x === square.x - 1 && s.props.y === square.y);\r\n                        if (targetSquare1 && !targetSquare1.props.piece) {\r\n                            possibleMoves.push({ x: square.x - 1, y: square.y });\r\n                        }\r\n\r\n                        //move two squares on the very first move\r\n                        const targetSquare2 = squares.find(s => s.props.x === square.x - 2 && s.props.y === square.y);\r\n                        if (square.x === 6 && targetSquare2 && !targetSquare2.props.piece && !targetSquare1.props.piece) {\r\n                            possibleMoves.push({ x: square.x - 2, y: square.y });\r\n                        }\r\n\r\n                        //capture to the left diagonal\r\n                        const leftNeigborToPotentuallyCapture1 = squares.find(s => s.props.x === square.x - 1 && s.props.y === square.y - 1);\r\n                        if (leftNeigborToPotentuallyCapture1 && leftNeigborToPotentuallyCapture1.props.piece &&\r\n                            ConvertFENPieceToPiece(leftNeigborToPotentuallyCapture1.props.piece).split('-')[0] != square.piece.split(\"-\")[0]) {\r\n                            possibleMoves.push({ x: square.x - 1, y: square.y - 1 });\r\n                        }\r\n\r\n                        //capture to the right diagonal\r\n                        const leftNeigborToPotentuallyCapture2 = squares.find(s => s.props.x === square.x - 1 && s.props.y === square.y + 1);\r\n                        if (leftNeigborToPotentuallyCapture2 && leftNeigborToPotentuallyCapture2.props.piece &&\r\n                            ConvertFENPieceToPiece(leftNeigborToPotentuallyCapture2.props.piece).split('-')[0] != square.piece.split(\"-\")[0]) {\r\n                            possibleMoves.push({ x: square.x - 1, y: square.y + 1 });\r\n                        }\r\n\r\n                        //TODO: Implement the french fancy move - En passant\r\n                        //TODO: Implement promotion\r\n                    } else {\r\n                        const targetSquare1 = squares.find(s => s.props.x === square.x + 1 && s.props.y === square.y);\r\n                        if (targetSquare1 && !targetSquare1.props.piece) {\r\n                            possibleMoves.push({ x: square.x + 1, y: square.y });\r\n                        }\r\n\r\n                        //move two squares on the very first move\r\n                        const targetSquare2 = squares.find(s => s.props.x === square.x + 2 && s.props.y === square.y);\r\n                        if (square.x === 1 && targetSquare2 && !targetSquare2.props.piece && !targetSquare1.props.piece) {\r\n                            possibleMoves.push({ x: square.x + 2, y: square.y });\r\n                        }\r\n\r\n                        //capture to the left diagonal\r\n                        const leftNeigborToPotentuallyCapture1 = squares.find(s => s.props.x === square.x + 1 && s.props.y === square.y - 1);\r\n                        if (leftNeigborToPotentuallyCapture1 && leftNeigborToPotentuallyCapture1.props.piece &&\r\n                            ConvertFENPieceToPiece(leftNeigborToPotentuallyCapture1.props.piece).split('-')[0] != square.piece.split(\"-\")[0]) {\r\n                            possibleMoves.push({ x: square.x + 1, y: square.y - 1 });\r\n                        }\r\n\r\n                        //capture to the right diagonal\r\n                        const leftNeigborToPotentuallyCapture2 = squares.find(s => s.props.x === square.x + 1 && s.props.y === square.y + 1);\r\n                        if (leftNeigborToPotentuallyCapture2 && leftNeigborToPotentuallyCapture2.props.piece &&\r\n                            ConvertFENPieceToPiece(leftNeigborToPotentuallyCapture2.props.piece).split('-')[0] != square.piece.split(\"-\")[0]) {\r\n                            possibleMoves.push({ x: square.x + 1, y: square.y + 1 });\r\n                        }\r\n\r\n                        //TODO: Implement the french fancy move - En passant\r\n                        //TODO: Implement promotion\r\n                    }\r\n                    break;\r\n                case \"rook\":\r\n                    break;\r\n                case \"bishop\":\r\n                    break;\r\n                case \"knight\":\r\n                    break;\r\n                case \"king\":\r\n                    break;\r\n                case \"queen\":\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        console.log(\"Possible Moves:\", possibleMoves);\r\n        this.setState({ possibleMoves })\r\n    }\r\n\r\n    renderSquares() {\r\n        let squareColorIsWhite = true;\r\n        const squares = [];\r\n        for (let i = 0; i < DIM; i++) {\r\n            let row = ConvertFenToString(this.state.position[i]);\r\n            for (let j = 0; j < DIM; j++) {\r\n                const piece = row.charAt(j);\r\n                let color = squareColorIsWhite ? \"\" : \"dark\";\r\n                squares.push(\r\n                    <Square\r\n                        getPossibleMoves={this.getPossibleMoves.bind(this)}\r\n                        key={`${i}-${j}`}\r\n                        x={i}\r\n                        y={j}\r\n                        piece={piece.trim()}\r\n                        color={color}\r\n                        setSelectedPiece={this.setSelectedPiece}\r\n                        possibleMoves={this.state.possibleMoves}\r\n                    />\r\n                );\r\n                squareColorIsWhite = !squareColorIsWhite;\r\n            }\r\n            squareColorIsWhite = !squareColorIsWhite;\r\n        }\r\n        return squares;\r\n    }\r\n\r\n    render() {\r\n        const squares = this.renderSquares();\r\n        return (\r\n            <div className=\"chessGrid\">\r\n                {squares}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default function Chess() {\r\n\r\n    const [selectedPiece, setSelectedPiece] = useState('');\r\n\r\n    function updateSelectedPiece(value) {\r\n        setSelectedPiece(value);\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"chessContainer\">\r\n            <div id=\"grid\" className=\"chessGrid\">\r\n                <Board selectedPiece={selectedPiece} setSelectedPiece={updateSelectedPiece} />\r\n            </div>\r\n        </div>\r\n    </>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}