{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladi Gotsin\\\\Desktop\\\\react\\\\src\\\\Chess.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  dark\n}) {\n  let c = \"chessSquare\";\n  c = dark ? c + ' dark' : c;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: c\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 12\n  }, this);\n}\n_c = Square;\nfunction Row() {\n  let squares = [];\n  for (let i = 0; i < 8; i++) {\n    let dark = i % 2 == 0 ? true : false;\n    squares.push( /*#__PURE__*/_jsxDEV(Square, {\n      dark: dark\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 22\n    }, this));\n  }\n  return squares;\n}\n_c2 = Row;\nfunction Board() {\n  let rows = [];\n  for (let i = 0; i < 8; i++) {\n    rows.push( /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }, this));\n  }\n  return rows;\n}\n_c3 = Board;\nexport default function Chess() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c4 = Chess;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Board\");\n$RefreshReg$(_c4, \"Chess\");","map":{"version":3,"names":["Square","dark","c","_jsxDEV","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Row","squares","i","push","_c2","Board","rows","_c3","Chess","_Fragment","children","_c4","$RefreshReg$"],"sources":["C:/Users/Vladi Gotsin/Desktop/react/src/Chess.js"],"sourcesContent":["function Square({ dark }) {\r\n    let c = \"chessSquare\";\r\n    c = dark ? c + ' dark' : c;\r\n    return <div className={c}></div>\r\n}\r\n\r\nfunction Row() {\r\n    let squares = [];\r\n\r\n    for (let i = 0; i < 8; i++) {\r\n        let dark = i % 2 == 0 ? true : false;\r\n        squares.push(<Square dark={dark}></Square>)\r\n    }\r\n\r\n    return squares;\r\n}\r\n\r\nfunction Board() {\r\n    let rows = [];\r\n\r\n    for (let i = 0; i < 8; i++) {\r\n        rows.push(<Row></Row>)\r\n    }\r\n\r\n    return rows;\r\n}\r\n\r\nexport default function Chess() {\r\n    return (<>\r\n        <div>\r\n            <Board></Board>\r\n        </div>\r\n    </>)\r\n}"],"mappings":";;;AAAA,SAASA,MAAMA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACtB,IAAIC,CAAC,GAAG,aAAa;EACrBA,CAAC,GAAGD,IAAI,GAAGC,CAAC,GAAG,OAAO,GAAGA,CAAC;EAC1B,oBAAOC,OAAA;IAAKC,SAAS,EAAEF;EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpC;AAACC,EAAA,GAJQT,MAAM;AAMf,SAASU,GAAGA,CAAA,EAAG;EACX,IAAIC,OAAO,GAAG,EAAE;EAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxB,IAAIX,IAAI,GAAGW,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK;IACpCD,OAAO,CAACE,IAAI,eAACV,OAAA,CAACH,MAAM;MAACC,IAAI,EAAEA;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,CAAC;EAC/C;EAEA,OAAOG,OAAO;AAClB;AAACG,GAAA,GATQJ,GAAG;AAWZ,SAASK,KAAKA,CAAA,EAAG;EACb,IAAIC,IAAI,GAAG,EAAE;EAEb,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxBI,IAAI,CAACH,IAAI,eAACV,OAAA,CAACO,GAAG;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC;EAC1B;EAEA,OAAOQ,IAAI;AACf;AAACC,GAAA,GARQF,KAAK;AAUd,eAAe,SAASG,KAAKA,CAAA,EAAG;EAC5B,oBAAQf,OAAA,CAAAgB,SAAA;IAAAC,QAAA,eACJjB,OAAA;MAAAiB,QAAA,eACIjB,OAAA,CAACY,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC,gBACR,CAAC;AACP;AAACa,GAAA,GANuBH,KAAK;AAAA,IAAAT,EAAA,EAAAK,GAAA,EAAAG,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}