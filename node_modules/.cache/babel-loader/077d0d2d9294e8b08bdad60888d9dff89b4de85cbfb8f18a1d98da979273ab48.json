{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladi Gotsin\\\\Desktop\\\\react\\\\src\\\\Chess.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DIM = 8; //8x8 Board\n\nclass Square extends Comment {\n  constructor(x, y, piece, color) {\n    this.x = x;\n    this.y = y;\n    this.piece = piece;\n    this.color = color;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'chessSquare piece',\n      x: this.x,\n      y: this.y,\n      onClick: () => move(p, cl, x, y)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n}\nclass Board extends Comment {\n  constructor() {\n    this.position = [];\n    for (let i = 0; i < DIM; i++) {\n      this.position[i] = [];\n      for (let j = 0; j < DIM; j++) {\n        this.position[i].push(new Square(i, j));\n      }\n    }\n  }\n}\nexport default function Chess() {\n  _s();\n  const [boardPosition, setBoardPosition] = useState(['rnbqkbnr', 'pppppppp', '8', '8', '8', '8', 'PPPPPPPP', 'RNBQKBNR']);\n  const [selectedPiece, setSelectedPiece] = useState('');\n  const [oldX, setOldX] = useState('');\n  const [oldY, setOldY] = useState('');\n  const [allowedMoves, setAllowedMoves] = useState([]);\n  const [whiteToMove, setWhiteToMove] = useState(true);\n  const [canWhiteShortCastle, setCanWhiteShortCastle] = useState(true);\n  const [canWhiteLongCastle, setCanWhiteLongCastle] = useState(true);\n  const [canBlackShortCastle, setCanBlackShortCastle] = useState(true);\n  const [canBlackLongCastle, setCanBlackLongCastle] = useState(true);\n  const [isWhiteInCheck, setIsWhiteInCheck] = useState(false);\n  const [isBlackInCheck, setIsBlackInCheck] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chessContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"grid\",\n        className: \"chessGrid\",\n        children: new Board()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Chess, \"IhlxSP5GS1lVgwjDIGSJHLPT3iM=\");\n_c = Chess;\nvar _c;\n$RefreshReg$(_c, \"Chess\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DIM","Square","Comment","constructor","x","y","piece","color","render","className","onClick","move","p","cl","fileName","_jsxFileName","lineNumber","columnNumber","Board","position","i","j","push","Chess","_s","boardPosition","setBoardPosition","selectedPiece","setSelectedPiece","oldX","setOldX","oldY","setOldY","allowedMoves","setAllowedMoves","whiteToMove","setWhiteToMove","canWhiteShortCastle","setCanWhiteShortCastle","canWhiteLongCastle","setCanWhiteLongCastle","canBlackShortCastle","setCanBlackShortCastle","canBlackLongCastle","setCanBlackLongCastle","isWhiteInCheck","setIsWhiteInCheck","isBlackInCheck","setIsBlackInCheck","children","id","_c","$RefreshReg$"],"sources":["C:/Users/Vladi Gotsin/Desktop/react/src/Chess.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst DIM = 8; //8x8 Board\r\n\r\nclass Square extends Comment {\r\n    constructor(x, y, piece, color) {\r\n        this.x = x\r\n        this.y = y\r\n        this.piece = piece\r\n        this.color = color\r\n    }\r\n\r\n    onClick = function () {\r\n        //TODO: Implement clicking a square\r\n    }\r\n\r\n    render() {\r\n        return <div className={'chessSquare piece'} x={this.x} y={this.y} onClick={() => move(p, cl, x, y)}></div>\r\n    }\r\n}\r\n\r\nclass Board extends Comment {\r\n    constructor() {\r\n        this.position = []\r\n\r\n        for (let i = 0; i < DIM; i++) {\r\n            this.position[i] = [];\r\n\r\n            for (let j = 0; j < DIM; j++) {\r\n                this.position[i].push(new Square(i, j))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default function Chess() {\r\n\r\n    const [boardPosition, setBoardPosition] = useState(\r\n        [\r\n            'rnbqkbnr',\r\n            'pppppppp',\r\n            '8',\r\n            '8',\r\n            '8',\r\n            '8',\r\n            'PPPPPPPP',\r\n            'RNBQKBNR'\r\n        ]);\r\n\r\n    const [selectedPiece, setSelectedPiece] = useState('');\r\n    const [oldX, setOldX] = useState('');\r\n    const [oldY, setOldY] = useState('');\r\n    const [allowedMoves, setAllowedMoves] = useState([])\r\n    const [whiteToMove, setWhiteToMove] = useState(true);\r\n    const [canWhiteShortCastle, setCanWhiteShortCastle] = useState(true);\r\n    const [canWhiteLongCastle, setCanWhiteLongCastle] = useState(true);\r\n    const [canBlackShortCastle, setCanBlackShortCastle] = useState(true);\r\n    const [canBlackLongCastle, setCanBlackLongCastle] = useState(true);\r\n    const [isWhiteInCheck, setIsWhiteInCheck] = useState(false);\r\n    const [isBlackInCheck, setIsBlackInCheck] = useState(false);\r\n\r\n    return (<>\r\n        <div className=\"chessContainer\">\r\n            <div id=\"grid\" className=\"chessGrid\">\r\n                {new Board()}\r\n            </div>\r\n        </div>\r\n    </>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}